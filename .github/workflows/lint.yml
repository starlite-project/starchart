name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy
          profile: minimal
          override: true

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        env:
          RUSTFLAGS: "-C target-cpu=haswell"
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --tests --workspace

  rustfmt:
    name: Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          profile: minimal
          override: true

      - name: Remove old matchers
        run: echo "::remove-matcher owner=rust::"

      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/rust.json"

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  codespell:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Run Codespell
        uses: codespell-project/actions-codespell@master