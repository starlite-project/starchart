var searchIndex = JSON.parse('{\
"starchart":{"doc":"A simple database system that allows the use of multiple …","t":[13,6,13,3,13,4,3,13,8,24,8,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,3,16,3,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,0,10,11,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,13,13,4,4,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Cache","ChartResult","Custom","Database","Database","Error","Gateway","Json","Key","Key","Settings","backend","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delete","drop","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","gateway","get","into","into","into","replace","set","source","to_key","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","0","0","0","0","Backend","CacheBackend","Error","JsonBackend","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","create","create","create_table","create_table","create_table","default","default","delete","delete","delete","delete_table","delete_table","delete_table","ensure","ensure_table","fmt","fmt","from","from","future","get","get","get","get_all","get_keys","get_keys","get_keys","has","has","has","has_table","has_table","has_table","init","init","into","into","new","new","replace","replace","replace","shutdown","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","update","update","CreateFuture","CreateTableFuture","DeleteFuture","DeleteTableFuture","EnsureFuture","EnsureTableFuture","GetAllFuture","GetFuture","GetKeysFuture","HasFuture","HasTableFuture","InitFuture","ReplaceFuture","ShutdownFuture","UpdateFuture","Backend","Cache","CacheError","ChartError","Custom","Database","DatabaseError","DeserializationError","FileAlreadyExists","InvalidFile","InvalidType","Io","Json","JsonError","PathNotDirectory","SerdeJson","Serialization","TableDoesntExist","ValueAlreadyExists","ValueDoesntExist","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","source","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","0","0","0","DbRef","Gateway","acquire","backend","borrow","borrow_mut","create","delete","delete_unchecked","deref","fmt","from","get","get_unchecked","into","key","new","try_from","try_into","type_id","value"],"q":["starchart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::Error","","","","starchart::backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::backend::future","","","","","","","","","","","","","","","starchart::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::error::CacheError","","","starchart::error::ChartError","","","","starchart::error::DatabaseError","starchart::error::JsonError","","","","","starchart::gateway","","","","","","","","","","","","","","","","","","","",""],"d":["A <code>CacheError</code> has occurred.","A type alias for a <code>Result</code> that wraps around <code>Error</code>.","A custom error has occurred, this is useful for <code>Result</code> …","A database for easily interacting with a <code>Backend</code>.","A <code>DatabaseError</code> has occurred.","An error enum to wrap around all possible errors within …","The base structure for managing <code>Database</code>s.","A <code>JsonError</code> has occurred.","The key trait to be implemented on <code>Settings</code> to allow an …","The helper derive macro for easily implementing <code>Key</code>.","A marker trait for use within the <code>Database</code>.","The backend that fetches and provides data for a <code>Database</code>.","Gives access to the raw <code>Backend</code> instance.","","","","","","","","","","","Deletes a value from the <code>Database</code>.","","The different errors within the crate.","","","","","","","","","","","","The base structure to use for starchart.","Gets a value from the <code>Database</code>.","","","","Replaces a value in place.","Sets a value in the <code>Database</code>, overwriting whatever was …","","The method to transform a <code>Key</code> into a value.","","","","","","","","","","","","","Updates a value in place.","","","","","The backend to be used with a <code>Database</code>.","A memory-based backend, uses a <code>DashMap</code> of <code>Value</code>s to …","The <code>Error</code> type that the backend will report up.","A JSON based backend, uses <code>serde_json</code> to read and write …","","","","","","","","","Inserts a new entry into a table.","","","Inserts or creates a table in the <code>Database</code>.","","","","","Deletes an entry from a table.","","","Deletes or drops a table from the <code>Database</code>.","","","Ensures a value exists in the table.","Ensures a table exists in the <code>Database</code>. Uses <code>has_table</code> …","","","","","Futures for <code>Backend</code> functions to return, for easier …","Gets a certain entry from a table.","","","Gets all entries that match a predicate, to get all …","Gets all the keys in the table.","","","Checks if an entry exists in a table.","","","Check if a table exists in the <code>Database</code>.","","","An optional initialization function, useful for making …","","","","Creates a new <code>CacheBackend</code>.","Creates a new <code>JsonBackend</code>.","Replaces an existing entry in a table.","","","An optional shutdown function, useful for disconnecting …","","","","","","","","","Updates an existing entry in a table.","","","The future returned from <code>Backend::create</code>.","The future returned from <code>Backend::create_table</code>.","The future returned from <code>Backend::delete</code>.","The future returned from <code>Backend::delete_table</code>.","The future returned from <code>Backend::ensure</code>.","The future returned from <code>Backend::ensure_table</code>.","The future returned from <code>Backend::get_all</code>.","The future returned from <code>Backend::get</code>.","The future returned from <code>Backend::get_keys</code>.","The future returned from <code>Backend::has</code>.","The future returned from <code>Backend::has_table</code>.","The future returned from <code>Backend::init</code>.","The future returned from <code>Backend::replace</code>.","The future returned from <code>Backend::shutdown</code>.","The future returned from <code>Backend::update</code>.","An error occurred from the <code>Backend</code>.","A <code>CacheError</code> has occurred.","An error returned from the <code>CacheBackend</code>.","An error enum to wrap around all possible errors within …","A custom error has occurred, this is useful for <code>Result</code> …","A <code>DatabaseError</code> has occurred.","An error that can be returned when setting up a <code>Database</code>.","A deserialization error occurred.","The file already exists","A file was found to be invalid.","An invalid generic type was passed to <code>Gateway::get</code>.","An IO error occurred.","A <code>JsonError</code> has occurred.","An error returned from the <code>JsonBackend</code>.","The path provided was not a directory.","An error occurred serializing data.","A serialization error occurred.","The specified table doesn’t exist","The value already exists","An expected value wasn’t found in the database.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An immutable reference to a <code>Database</code>.","The base structure for managing <code>Database</code>s.","Acquires a <code>Database</code>, uses <code>Gateway::get</code> first, then …","Gives access to the raw <code>Backend</code> instance.","","","Creates a new <code>Database</code>.","Deletes a <code>Database</code>, uses <code>Backend::delete_table</code> under the …","Deletes a <code>Database</code> from the <code>Gateway</code> without checking if it …","","","","Gets a <code>Database</code> from the cache.","Gets a <code>Database</code> from the cache without verifying that it …","","Returns the key of the <code>Database</code>.","Creates a new <code>Gateway</code>, and initializes the <code>Backend</code>.","","","","Returns the <code>Database</code>."],"i":[1,0,1,0,1,0,0,1,0,0,0,0,2,2,1,3,2,1,3,2,3,2,3,2,3,0,2,1,1,3,2,1,1,1,1,1,3,0,2,2,1,3,2,2,1,4,2,3,1,2,1,3,2,1,3,2,1,3,2,5,6,7,8,0,0,9,0,10,11,10,11,10,11,10,11,9,10,11,9,10,11,10,11,9,10,11,9,10,11,9,9,10,11,10,11,0,9,10,11,9,9,10,11,9,10,11,9,10,11,9,11,10,11,10,11,9,10,11,9,10,11,10,11,10,11,10,11,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,0,1,1,0,13,14,14,12,14,1,0,14,14,13,13,13,12,13,14,12,13,14,12,13,13,14,14,12,12,13,13,13,14,14,14,12,12,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,13,14,12,15,16,17,5,6,7,8,18,19,20,21,22,23,0,0,3,3,24,24,3,3,3,24,24,24,3,3,24,24,3,24,24,24,24],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]]],[[]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["databaseerror",4]]],[[["cacheerror",4]]],[[]],[[["jsonerror",4]]],[[["box",3,[["error",8]]]]],[[]],null,[[["str",15]]],[[]],[[]],[[]],[[["str",15]]],[[["str",15]]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["cachebackend",3]],[[],["jsonbackend",3]],[[]],[[]],[[["str",15],["str",15]],["createfuture",6]],[[["str",15],["str",15]],["createfuture",6]],[[["str",15],["str",15]],["createfuture",6,[["jsonerror",4]]]],[[["str",15]],["createtablefuture",6]],[[["str",15]],["createtablefuture",6]],[[["str",15]],["createtablefuture",6,[["jsonerror",4]]]],[[],["cachebackend",3]],[[],["jsonbackend",3]],[[["str",15],["str",15]],["deletefuture",6]],[[["str",15],["str",15]],["deletefuture",6]],[[["str",15],["str",15]],["deletefuture",6,[["jsonerror",4]]]],[[["str",15]],["deletetablefuture",6]],[[["str",15]],["deletetablefuture",6]],[[["str",15]],["deletetablefuture",6,[["jsonerror",4]]]],[[["str",15],["str",15]],["ensurefuture",6]],[[["str",15]],["ensuretablefuture",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[["str",15],["str",15]],["getfuture",6,[["",26],["",26]]]],[[["str",15],["str",15]],["getfuture",6,[["",26],["",26]]]],[[["str",15],["str",15]],["getfuture",6,[["",26],["",26],["jsonerror",4]]]],[[["str",15]],["getallfuture",6,[["",26],["",26]]]],[[["str",15]],["getkeysfuture",6,[["",26],["",26]]]],[[["str",15]],["getkeysfuture",6,[["",26],["",26]]]],[[["str",15]],["getkeysfuture",6,[["",26],["",26],["jsonerror",4]]]],[[["str",15],["str",15]],["hasfuture",6]],[[["str",15],["str",15]],["hasfuture",6]],[[["str",15],["str",15]],["hasfuture",6,[["jsonerror",4]]]],[[["str",15]],["hastablefuture",6]],[[["str",15]],["hastablefuture",6]],[[["str",15]],["hastablefuture",6,[["jsonerror",4]]]],[[],["initfuture",6]],[[],["initfuture",6,[["jsonerror",4]]]],[[]],[[]],[[]],[[["asref",8,[["path",3]]]],["result",4,[["jsonerror",4]]]],[[["str",15],["str",15]],["replacefuture",6]],[[["str",15],["str",15]],["replacefuture",6]],[[["str",15],["str",15]],["replacefuture",6,[["jsonerror",4]]]],[[],["shutdownfuture",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15],["str",15]],["updatefuture",6]],[[["str",15],["str",15]],["updatefuture",6]],[[["str",15],["str",15]],["updatefuture",6,[["jsonerror",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["deserializererror",4]]],[[["serializererror",4]]],[[["error",3]]],[[]],[[["error",3]]],[[]],[[["never",15]]],[[]],[[]],[[]],[[]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],[[]],[[]],[[]],[[["string",3]]],[[["str",15]]],[[["str",15]]],[[]],[[["formatter",3]],["fmtresult",6]],[[]],[[["str",15]],["result",4,[["option",4,[["dbref",3,[["",26]]]]],["databaseerror",4]]]],[[["str",15]],["dbref",3,[["",26]]]],[[]],[[],["str",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["database",3]]],"p":[[4,"Error"],[3,"Database"],[3,"Gateway"],[8,"Key"],[13,"Json"],[13,"Cache"],[13,"Database"],[13,"Custom"],[8,"Backend"],[3,"CacheBackend"],[3,"JsonBackend"],[4,"DatabaseError"],[4,"CacheError"],[4,"JsonError"],[13,"Serialization"],[13,"DeserializationError"],[13,"TableDoesntExist"],[13,"Backend"],[13,"PathNotDirectory"],[13,"Io"],[13,"SerdeJson"],[13,"InvalidFile"],[13,"FileAlreadyExists"],[3,"DbRef"]]},\
"starchart_derive":{"doc":"Derive macro helpers for the starchart crate.","t":[24],"n":["Key"],"q":["starchart_derive"],"d":[""],"i":[0],"f":[null],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};