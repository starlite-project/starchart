var searchIndex = JSON.parse('{\
"starchart":{"doc":"A simple database system that allows the use of multiple â€¦","t":[3,8,3,8,24,8,16,6,3,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,3,4,4,13,13,6,3,6,8,13,13,6,3,6,13,3,13,8,13,6,3,6,13,13,3,4,13,13,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,8,3,16,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,13,18,13,8,3,4,13,13,13,13,10,11,11,11,11,10,11,10,12,12,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,4,13,3,4,13,3,4,13,13,13,13,3,4,13,13,3,4,13,13,13,13,3,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["Action","Entry","Error","IndexEntry","IndexEntry","Key","Key","Result","Starchart","action","backend","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","drop","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","key","new","source","to_key","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Action","ActionKind","ActionResult","Create","Create","CreateEntryAction","CreateOperation","CreateTableAction","CrudOperation","Delete","Delete","DeleteEntryAction","DeleteOperation","DeleteTableAction","Entry","EntryTarget","MultiRead","OperationTarget","Read","ReadEntryAction","ReadOperation","ReadTableAction","SingleRead","Table","TableTarget","TargetKind","Update","Update","UpdateEntryAction","UpdateOperation","UpdateTableAction","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","create_entry","create_entry","create_table","create_table","data","default","default","delete_entry","delete_entry","delete_table","delete_table","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_action","into_create","into_delete","into_entry","into_operation","into_read","into_table","into_target","into_update","is_create","is_delete","is_multi_read","is_read","is_single_read","is_update","key","kind","ne","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","read_entry","read_entry","read_table","read_table","run","run_create_entry","run_create_entry","run_create_entry_unchecked","run_create_entry_unchecked","run_create_table","run_create_table","run_create_table_unchecked","run_create_table_unchecked","run_delete_entry","run_delete_entry","run_delete_entry_unchecked","run_delete_entry_unchecked","run_delete_table","run_delete_table","run_delete_table_unchecked","run_delete_table_unchecked","run_read_entry","run_read_entry","run_read_entry_unchecked","run_read_entry_unchecked","run_read_table","run_read_table","run_read_table_unchecked","run_read_table_unchecked","run_update_entry","run_update_entry","run_update_entry_unchecked","run_update_entry_unchecked","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_data","set_entry","set_key","set_table","table","target","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_create","unwrap_create_unchecked","unwrap_delete","unwrap_delete_unchecked","unwrap_multi_read","unwrap_multi_read_unchecked","unwrap_single_read","unwrap_single_read_unchecked","unwrap_update","unwrap_update_unchecked","update_entry","update_entry","validate_data","validate_entry","validate_key","validate_metadata","validate_table","with_entry","0","0","0","Backend","BincodeBackend","Error","JsonBackend","JsonPrettyBackend","MemoryBackend","TomlBackend","TomlPrettyBackend","YamlBackend","base_directory","base_directory","base_directory","base_directory","base_directory","base_directory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create","create","create","create","create","create","create","create","create_table","create_table","create_table","create_table","create_table","create_table","create_table","create_table","default","default","default","default","default","default","default","delete","delete","delete","delete","delete","delete","delete","delete","delete_table","delete_table","delete_table","delete_table","delete_table","delete_table","delete_table","delete_table","ensure","ensure_table","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","fs","futures","get","get","get","get","get","get","get","get","get_all","get_keys","get_keys","get_keys","get_keys","get_keys","get_keys","get_keys","get_keys","has","has","has","has","has","has","has","has","has_table","has_table","has_table","has_table","has_table","has_table","has_table","has_table","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","new","new","new","new","new","new","read_data","read_data","read_data","read_data","read_data","read_data","replace","replace","replace","replace","replace","replace","replace","replace","shutdown","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","update","update","update","update","with_options","Deserialization","EXTENSION","FileAlreadyExists","FsBackend","FsError","FsErrorType","InvalidFile","Io","PathNotDirectory","Serialization","base_directory","deserialization","into_parts","into_source","kind","read_data","serialization","to_bytes","path","path","path","CreateFuture","CreateTableFuture","DeleteFuture","DeleteTableFuture","EnsureFuture","EnsureTableFuture","GetAllFuture","GetFuture","GetKeysFuture","HasFuture","HasTableFuture","InitFuture","ReplaceFuture","ShutdownFuture","UpdateFuture","ActionError","ActionErrorType","ActionRun","ActionRunError","ActionRunErrorType","ActionValidation","ActionValidationError","ActionValidationErrorType","Backend","Data","Deserialization","Deserialization","Error","ErrorType","FileAlreadyExists","Fs","FsError","FsErrorType","InvalidFile","Io","Key","Memory","MemoryError","MemoryErrorType","Metadata","Metadata","PathNotDirectory","Run","Serialization","Serialization","Table","TableDoesntExist","Validation","ValueAlreadyExists","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into_parts","into_parts","into_parts","into_parts","into_parts","into_source","into_source","into_source","into_source","into_source","kind","kind","kind","kind","kind","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","table_name","type_name","path","path","path","key","table"],"q":["starchart","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::actionstarchart::action::ActionResult","","","starchart::backendstarchart::backend::fs","","","","","","","","","","","","","","","","","","starchart::backend::fs::FsErrorType","","","starchart::backend::futures","","","","","","","","","","","","","","","starchart::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","starchart::error::ActionRunErrorType","","starchart::error::FsErrorType","","","starchart::error::MemoryErrorType",""],"d":["An <code>Action</code> for easy <code>CRUD</code> operations within a <code>Starchart</code>.","A marker trait for use within the <code>Starchart</code>.","An error that occurred within the crate.","An indexable entry, used for any <code>Entry</code> that can be indexed â€¦","The helper derive macro for easily implementing <code>IndexEntry</code>.","The key trait to be implemented on <code>Entry</code> to allow an easy â€¦","The <code>Key</code> type to index by.","A type alias for a <code>Result</code> that wraps around <code>Error</code>.","The base structure for managing data.","The action structs for CRUD operations.","The backend that fetches and provides data for the â€¦","Gives access to the raw <code>Backend</code> instance.","","","","","","","","","","","","","","The different errors within the crate.","","","","","","","","","","","","","","","","Returns the valid key for the database to index from.","Creates a new <code>Starchart</code>, and initializes the <code>Backend</code>.","","The method to transform a <code>Key</code> into a value.","","","","","","","","","","","","","An <code>Action</code> for easy <code>CRUD</code> operations within a <code>Starchart</code>.","The type of <code>CRUD</code> action to perform","A custom <code>Result</code> type that allows the <code>Action::run</code> method to â€¦","Signifies that the operation will be a Create.","Indicates a <code>CreateOperation</code> was performed.","A type alias for an <code>Action</code> with <code>CreateOperation</code> and â€¦","Marker type for a Create operation.","A type alias for an <code>Action</code> with <code>CreateOperation</code> and â€¦","A sealed marker trait for helping an <code>Action</code> represent what â€¦","Signifies that the operation will be a Delete.","Indicates a <code>DeleteOperation</code> was performed.","A type alias for an <code>Action</code> with <code>DeleteOperation</code> and â€¦","Marker type for a Delete operation.","A type alias for an <code>Action</code> with <code>DeleteOperation</code> and â€¦","The operation will be performed on a single entry.","Marker type for an entry operation.","Indicates a <code>ReadOperation</code> was performed on a <code>TableTarget</code>.","A sealed marker trait for helping an <code>Action</code> represent what â€¦","Signifies that the operation will be a Read.","A type alias for an <code>Action</code> with <code>ReadOperation</code> and â€¦","Marker type for a Read operation.","A type alias for an <code>Action</code> with <code>ReadOperation</code> and â€¦","Indicates a <code>ReadOperation</code> was performed on an <code>EntryTarget</code>.","The operation will be performed on a table.","Marker type for a table operation.","The target of the <code>CRUD</code> operation.","Signifies that the operation will be an Update.","Indicates an <code>UpdateOperation</code> was performed.","A type alias for an <code>Action</code> with <code>UpdateOperation</code> and â€¦","Marker type for an Update operation.","A type alias for an <code>Action</code> with <code>UpdateOperation</code> and â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>CreateOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>CreateOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>CreateOperation</code> based <code>TableTarget</code> operation.","Creates a new <code>CreateOperation</code> based <code>TableTarget</code> operation.","Get a reference to the currently set data.","","","Creates a new <code>DeleteOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>DeleteOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>DeleteOperation</code> based <code>TableTarget</code> operation.","Creates a new <code>DeleteOperation</code> based <code>TableTarget</code> operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Changes both the <code>CrudOperation</code> and <code>OperationTarget</code> of this â€¦","Sets the <code>CrudOperation</code> of this <code>Action</code> to <code>CreateOperation</code>.","Sets the <code>CrudOperation</code> of this <code>Action</code> to <code>DeleteOperation</code>.","Sets the <code>OperationTarget</code> of this <code>Action</code> to <code>EntryTarget</code>.","Changes the <code>CrudOperation</code> of this <code>Action</code>.","Sets the <code>CrudOperation</code> of this <code>Action</code> to <code>ReadOperation</code>.","Sets the <code>OperationTarget</code> of this <code>Action</code> to <code>TableTarget</code>.","Changes the <code>OperationTarget</code> of this <code>Action</code>.","Sets the <code>CrudOperation</code> of this <code>Action</code> to <code>UpdateOperation</code>.","Returns <code>true</code> if the result is <code>Create</code>.","Returns <code>true</code> if the result is a <code>Delete</code>.","Returns <code>true</code> if the result is <code>MultiRead</code>.","Returns <code>true</code> if the result is either a <code>SingleRead</code> or a â€¦","Returns <code>true</code> if the result is <code>SingleRead</code>.","Returns <code>true</code> if the result is an <code>Update</code>.","Get a reference to the currently set key.","Returns the <code>ActionKind</code> we will be performing with said â€¦","","Creates a new <code>Action</code> with the specified operation.","","","","","","","","","Creates a new <code>ReadOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>ReadOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>ReadOperation</code> based <code>TableTarget</code> operation.","Creates a new <code>ReadOperation</code> based <code>TableTarget</code> operation.","Runs an <code>Action</code> to completion.","Validates and runs a <code>CreateEntryAction</code>.","Validates and runs a <code>CreateEntryAction</code>.","Runs a <code>CreateEntryAction</code>, not checking for any validation â€¦","Runs a <code>CreateEntryAction</code>, not checking for any validation â€¦","Validates and runs a <code>CreateTableAction</code>.","Validates and runs a <code>CreateTableAction</code>.","Runs a <code>CreateTableAction</code>, not checking for any validation â€¦","Runs a <code>CreateTableAction</code>, not checking for any validation â€¦","Validates and runs a <code>DeleteEntryAction</code>.","Validates and runs a <code>DeleteEntryAction</code>.","Runs a <code>DeleteEntryAction</code>, not checking for any validation â€¦","Runs a <code>DeleteEntryAction</code>, not checking for any validation â€¦","Validates and runs a <code>DeleteTableAction</code>.","Validates and runs a <code>DeleteTableAction</code>.","Runs a <code>DeleteTableAction</code>, not checking for any validation â€¦","Runs a <code>DeleteTableAction</code>, not checking for any validation â€¦","Validates and runs a <code>ReadEntryAction</code>.","Validates and runs a <code>ReadEntryAction</code>.","Runs a <code>ReadEntryAction</code>, not checking for any validation â€¦","Runs a <code>ReadEntryAction</code>, not checking for any validation â€¦","Validates and runs a <code>ReadTableAction</code>.","Validates and runs a <code>ReadTableAction</code>.","Runs a <code>ReadTableAction</code>, not checking for any validation â€¦","Runs a <code>ReadTableAction</code>, not checking for any validation â€¦","Validates and runs a <code>UpdateEntryAction</code>.","Validates and runs a <code>UpdateEntryAction</code>.","Runs a <code>UpdateEntryAction</code>, not checking for any validation â€¦","Runs a <code>UpdateEntryAction</code>, not checking for any validation â€¦","","","","","","","","","Sets the data for the action.","Sets the <code>Entry</code> and <code>Key</code> that this <code>Action</code> will act over.","Sets the key for the action.","Sets the table for this action.","Get a reference to the currently set table.","Returns the <code>OperationTarget</code> we will be performing with â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the <code>ActionResult</code> and asserts itâ€™s a create","Unwraps the <code>ActionResult::Create</code> value, without checking â€¦","Unwraps the <code>ActionResult</code> and asserts itâ€™s a delete.","Unwraps the <code>ActionResult::Delete</code> value, without checking â€¦","Unwraps the <code>ActionResult</code> and asserts itâ€™s a multi-read.","Unwraps the <code>ActionResult::MultiRead</code> value, without â€¦","Unwraps the <code>ActionResult</code> and asserts itâ€™s a single read.","Unwraps the <code>ActionResult::SingleRead</code> value, without â€¦","Unwraps the <code>ActionResult</code> and asserts itâ€™s an update.","Unwraps the <code>ActionResult::Update</code> value, without checking â€¦","Creates a new <code>UpdateOperation</code> based <code>EntryTarget</code> operation.","Creates a new <code>UpdateOperation</code> based <code>EntryTarget</code> operation.","Validates that the data has been set.","Validates that both the key and data have been set.","Validate that the key has been set.","Validates that the key is not the private metadata key.","Validates that the table key is set.","Sets the target <code>Entry</code> of this <code>Action</code>.","","","","The backend to be used to manage data.","A Binary format based backend.","The <code>Error</code> type that the backend will report up.","A JSON based backend.","A JSON based pretty printing backend.","A memory-based backend, uses a <code>DashMap</code> of <code>Value</code>s to â€¦","A TOML based backend.","A TOML based backend, that uses pretty printing.","A YAML based backend.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a new entry into a table.","","","","","","","","Inserts or creates a table.","","","","","","","","","","","","","","","Deletes an entry from a table.","","","","","","","","Deletes or drops a table.","","","","","","","","Ensures a value exists in the table.","Ensures a table exists. Uses <code>Self::has_table</code> first, then â€¦","","","","","","","","","","","","","","","Helpers for creating file-system based backends.","Futures for <code>Backend</code> functions to return, for easier â€¦","Gets a certain entry from a table.","","","","","","","","Gets all entries that match a predicate, to get all â€¦","Gets all the keys in the table.","","","","","","","","Checks if an entry exists in a table.","","","","","","","","Check if a table exists.","","","","","","","","","An optional initialization function, useful for making â€¦","","","","","","","","","","","","","Create a new <code>BincodeBackend</code> with the <code>DefaultOptions</code>.","Create a new <code>JsonBackend</code>.","Create a new <code>JsonPrettyBackend</code>.","Creates a new <code>MemoryBackend</code>.","Create a new <code>TomlBackend</code>.","Create a new <code>TomlPrettyBackend</code>.","Create a new <code>YamlBackend</code>.","","","","","","","Replaces an existing entry in a table.","","","","","","","","An optional shutdown function, useful for disconnecting â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates an existing entry in a table.","","","","","","","","Creates a new <code>BincodeBackend</code> with the specified <code>Options</code>.","An error occurred during deserialization.","The base extension of the files.","The file already exists.","The trait for all File System based backends to implement","An error occurred from an <code>FsBackend</code>.","The type of <code>FsError</code> that occurred.","The given file was invalid in some way.","An IO error occurred.","The path provided was not a directory.","An error occurred during serialization.","The base directory of the Fs database.","A shortcut for easily creating a deserialization error.","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the source error if there is â€¦","Immutable reference to the type of error that occurred.","Turn a <code>Read</code>er into an <code>Entry</code>.","A shortcut for easily creating a serialization error.","Turn a <code>Entry</code> into a writable <code>Vec</code>.","The provided path.","The provided path to the file.","The provided path to the file.","The future returned from <code>Backend::create</code>.","The future returned from <code>Backend::create_table</code>.","The future returned from <code>Backend::delete</code>.","The future returned from <code>Backend::delete_table</code>.","The future returned from <code>Backend::ensure</code>.","The future returned from <code>Backend::ensure_table</code>.","The future returned from <code>Backend::get_all</code>.","The future returned from <code>Backend::get</code>.","The future returned from <code>Backend::get_keys</code>.","The future returned from <code>Backend::has</code>.","The future returned from <code>Backend::has_table</code>.","The future returned from <code>Backend::init</code>.","The future returned from <code>Backend::replace</code>.","The future returned from <code>Backend::shutdown</code>.","The future returned from <code>Backend::update</code>.","A general <code>Action</code> error.","The type of <code>ActionError</code> that occurred.","An <code>ActionRunError</code> occurred.","An error that occurred from running an <code>Action</code>.","The type of <code>ActionRunError</code> that occurred.","An <code>ActionValidationError</code> occurred.","An error occurred during validation of an <code>Action</code>.","The type of <code>ActionValidationError</code> that occurred.","An error occurred with a <code>Backend</code> method.","Data was missing when it was expected.","An error occurred during deserialization.","A deserialization error occurred.","An error that occurred within the crate.","The type of <code>Error</code> that occurred.","The file already exists.","An error occurred with a <code>FsBackend</code>.","An error occurred from an <code>FsBackend</code>.","The type of <code>FsError</code> that occurred.","The given file was invalid in some way.","An IO error occurred.","A key was missing when it was expected.","An error occurred in the <code>MemoryBackend</code>.","An error returned from the <code>MemoryBackend</code>.","The type of <code>MemoryError</code> that occurred.","The table or key name matched the private metadata key.","A value did not match the tableâ€™s metadata.","The path provided was not a directory.","A <code>run</code> error occurred.","An error occurred during serialization.","A serialization error occurred.","The table was missing.","The specified table doesnâ€™t exist","A validation error has occurred.","The specified value already exists","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the owned error type and the â€¦","Consume the error, returning the source error if there is â€¦","Consume the error, returning the source error if there is â€¦","Consume the error, returning the source error if there is â€¦","Consume the error, returning the source error if there is â€¦","Consume the error, returning the source error if there is â€¦","Immutable reference to the type of error that occurred.","Immutable reference to the type of error that occurred.","Immutable reference to the type of error that occurred.","Immutable reference to the type of error that occurred.","Immutable reference to the type of error that occurred.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The table metadata to match against.","The name of the type that didnâ€™t match.","The provided path.","The provided path to the file.","The provided path to the file.","The existing valueâ€™s key.","The table that doesnâ€™t exist."],"i":[0,0,0,0,0,0,1,0,0,0,0,2,3,4,2,3,4,2,3,2,3,2,3,2,2,0,3,4,4,2,3,4,4,4,4,4,4,2,3,4,2,1,2,4,5,3,2,4,3,4,2,3,4,2,3,4,2,0,0,0,6,7,0,0,0,0,6,7,0,0,0,8,0,7,0,6,0,0,0,7,8,0,0,6,7,0,0,0,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,7,8,15,3,16,3,3,6,8,17,3,18,3,9,10,11,12,13,14,6,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,7,8,9,10,11,12,13,14,6,6,7,7,8,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,7,8,9,10,11,12,13,14,6,7,8,3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,3,3,7,3,9,10,11,12,13,14,7,8,19,3,20,3,3,15,3,15,3,16,3,16,3,17,3,17,3,18,3,18,3,19,3,19,3,20,3,20,3,21,3,21,3,9,10,11,12,13,14,6,8,3,3,3,3,3,3,9,10,11,12,13,14,6,7,8,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14,6,7,8,7,7,7,7,7,7,7,7,7,7,21,3,3,3,3,3,3,3,22,23,24,0,0,25,0,0,0,0,0,0,26,27,28,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,25,25,26,27,28,32,29,30,31,26,27,28,32,29,30,31,0,0,25,26,27,28,32,29,30,31,25,25,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,26,25,27,28,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,26,27,28,29,30,31,25,26,27,28,32,29,30,31,25,26,27,28,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,26,27,28,32,29,30,31,25,26,27,28,32,29,30,31,26,33,34,33,0,0,0,33,33,33,33,34,35,35,35,35,34,35,34,36,37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,0,0,39,0,0,40,41,33,42,0,0,33,39,0,0,33,33,41,39,0,0,41,40,33,43,33,42,41,42,43,42,44,43,45,41,46,40,35,33,47,42,39,44,43,45,41,46,40,35,33,47,42,39,44,44,43,45,45,41,46,46,40,35,35,33,47,47,42,39,44,43,45,41,46,40,35,33,47,42,39,44,43,45,41,46,40,35,33,47,42,39,44,45,46,47,4,44,45,46,47,4,44,45,46,47,4,44,45,46,35,47,44,45,46,35,47,44,43,45,41,46,40,35,33,47,42,39,44,43,45,41,46,40,35,33,47,42,39,44,43,45,41,46,40,35,33,47,42,39,48,48,36,37,38,49,50],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["action",3]],[[]],[[]],[[]],[[]],[[],["starchart",3]],[[]],null,[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["actionrunerror",3]]],[[["memoryerror",3]]],[[]],[[["actionvalidationerror",3]]],[[["actionerror",3]]],[[["fserror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["stderror",8]]]],[[],["string",3]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["createoperation",3]],[[],["readoperation",3]],[[],["updateoperation",3]],[[],["deleteoperation",3]],[[],["tabletarget",3]],[[],["entrytarget",3]],[[],["actionkind",4]],[[],["actionresult",4]],[[],["targetkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["createoperation",3]],["ordering",4]],[[["readoperation",3]],["ordering",4]],[[["updateoperation",3]],["ordering",4]],[[["deleteoperation",3]],["ordering",4]],[[["tabletarget",3]],["ordering",4]],[[["entrytarget",3]],["ordering",4]],[[["actionresult",4]],["ordering",4]],[[["targetkind",4]],["ordering",4]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["createoperation",3]],["bool",15]],[[["readoperation",3]],["bool",15]],[[["updateoperation",3]],["bool",15]],[[["deleteoperation",3]],["bool",15]],[[["tabletarget",3]],["bool",15]],[[["entrytarget",3]],["bool",15]],[[["actionkind",4]],["bool",15]],[[["actionresult",4]],["bool",15]],[[["targetkind",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["action",3,[["crudoperation",8],["operationtarget",8]]]],[[],["action",3,[["createoperation",3]]]],[[],["action",3,[["deleteoperation",3]]]],[[],["action",3,[["entrytarget",3]]]],[[],["action",3,[["crudoperation",8]]]],[[],["action",3,[["readoperation",3]]]],[[],["action",3,[["tabletarget",3]]]],[[],["action",3,[["operationtarget",8]]]],[[],["action",3,[["updateoperation",3]]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["option",4,[["str",15]]]],[[],["actionkind",4]],[[["actionresult",4]],["bool",15]],[[]],[[["createoperation",3]],["option",4,[["ordering",4]]]],[[["readoperation",3]],["option",4,[["ordering",4]]]],[[["updateoperation",3]],["option",4,[["ordering",4]]]],[[["deleteoperation",3]],["option",4,[["ordering",4]]]],[[["tabletarget",3]],["option",4,[["ordering",4]]]],[[["entrytarget",3]],["option",4,[["ordering",4]]]],[[["actionresult",4]],["option",4,[["ordering",4]]]],[[["targetkind",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[["starchart",3]]],[[["starchart",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[]],[[["string",3]]],[[],["option",4,[["str",15]]]],[[],["targetkind",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["fromiterator",8]],[[],["fromiterator",8]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4,[["actionvalidationerror",3]]]],[[],["result",4,[["actionvalidationerror",3]]]],[[],["result",4,[["actionvalidationerror",3]]]],[[["option",4,[["str",15]]]],["result",4,[["actionvalidationerror",3]]]],[[],["result",4,[["actionvalidationerror",3]]]],[[],["action",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[],["pathbuf",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["jsonbackend",3]],[[],["jsonprettybackend",3]],[[],["memorybackend",3]],[[],["tomlbackend",3]],[[],["tomlprettybackend",3]],[[],["yamlbackend",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["str",15]],["createfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["createfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["createtablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["createtablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[]],[[],["jsonbackend",3]],[[],["jsonprettybackend",3]],[[],["memorybackend",3]],[[],["tomlbackend",3]],[[],["tomlprettybackend",3]],[[],["yamlbackend",3]],[[["str",15],["str",15]],["deletefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["deletefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["deletetablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["deletetablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["ensurefuture",6]],[[["str",15]],["ensuretablefuture",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["str",15],["str",15]],["getfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["getfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["getallfuture",6]],[[["str",15]],["getkeysfuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["getkeysfuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["hasfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["hasfuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["hastablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["hastablefuture",6]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["initfuture",6]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[],["result",4,[["fserror",3]]]],[[["str",15],["str",15]],["replacefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["replacefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[],["shutdownfuture",6]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["str",15],["str",15]],["updatefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["updatefuture",6]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["str",15],["str",15]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["asref",8,[["path",3]]]],["result",4,[["fserror",3]]]],null,null,null,null,null,null,null,null,null,null,[[],["pathbuf",3]],[[["option",4,[["box",3,[["error",8]]]]]]],[[]],[[],["option",4,[["box",3,[["error",8]]]]]],[[],["fserrortype",4]],[[],["result",4,[["fserror",3]]]],[[["option",4,[["box",3,[["error",8]]]]]]],[[],["result",4,[["vec",3,[["u8",15]]],["fserror",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4,[["box",3,[["error",8]]]]]],[[],["option",4,[["box",3,[["error",8]]]]]],[[],["option",4,[["box",3,[["error",8]]]]]],[[],["option",4,[["box",3,[["error",8]]]]]],[[],["option",4,[["box",3,[["stderror",8]]]]]],[[],["actionerrortype",4]],[[],["actionvalidationerrortype",4]],[[],["actionrunerrortype",4]],[[],["memoryerrortype",4]],[[],["errortype",4]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null],"p":[[8,"IndexEntry"],[3,"Starchart"],[3,"Action"],[3,"Error"],[8,"Key"],[4,"ActionKind"],[4,"ActionResult"],[4,"TargetKind"],[3,"CreateOperation"],[3,"ReadOperation"],[3,"UpdateOperation"],[3,"DeleteOperation"],[3,"TableTarget"],[3,"EntryTarget"],[6,"CreateEntryAction"],[6,"CreateTableAction"],[6,"DeleteEntryAction"],[6,"DeleteTableAction"],[6,"ReadEntryAction"],[6,"ReadTableAction"],[6,"UpdateEntryAction"],[13,"SingleRead"],[13,"MultiRead"],[13,"Delete"],[8,"Backend"],[3,"BincodeBackend"],[3,"JsonBackend"],[3,"JsonPrettyBackend"],[3,"TomlBackend"],[3,"TomlPrettyBackend"],[3,"YamlBackend"],[3,"MemoryBackend"],[4,"FsErrorType"],[8,"FsBackend"],[3,"FsError"],[13,"PathNotDirectory"],[13,"InvalidFile"],[13,"FileAlreadyExists"],[4,"ErrorType"],[4,"ActionRunErrorType"],[4,"ActionValidationErrorType"],[4,"MemoryErrorType"],[4,"ActionErrorType"],[3,"ActionError"],[3,"ActionValidationError"],[3,"ActionRunError"],[3,"MemoryError"],[13,"Metadata"],[13,"ValueAlreadyExists"],[13,"TableDoesntExist"]]},\
"starchart_derive":{"doc":"Derive macro helpers for the starchart crate.","t":[24],"n":["IndexEntry"],"q":["starchart_derive"],"d":[""],"i":[0],"f":[null],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};