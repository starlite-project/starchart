(function() {var implementors = {};
implementors["starchart"] = [{"text":"impl&lt;S:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"starchart/action/struct.DynamicAction.html\" title=\"struct starchart::action::DynamicAction\">DynamicAction</a>&lt;S&gt;","synthetic":true,"types":["starchart::action::dynamic::DynamicAction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/error/struct.ActionError.html\" title=\"struct starchart::error::ActionError\">ActionError</a>","synthetic":true,"types":["starchart::action::error::ActionError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/error/enum.ActionErrorType.html\" title=\"enum starchart::error::ActionErrorType\">ActionErrorType</a>","synthetic":true,"types":["starchart::action::error::ActionErrorType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/error/struct.ActionValidationError.html\" title=\"struct starchart::error::ActionValidationError\">ActionValidationError</a>","synthetic":true,"types":["starchart::action::error::ActionValidationError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/error/enum.ActionValidationErrorType.html\" title=\"enum starchart::error::ActionValidationErrorType\">ActionValidationErrorType</a>","synthetic":true,"types":["starchart::action::error::ActionValidationErrorType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/error/struct.ActionRunError.html\" title=\"struct starchart::error::ActionRunError\">ActionRunError</a>","synthetic":true,"types":["starchart::action::error::ActionRunError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/error/enum.ActionRunErrorType.html\" title=\"enum starchart::error::ActionRunErrorType\">ActionRunErrorType</a>","synthetic":true,"types":["starchart::action::error::ActionRunErrorType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.CreateOperation.html\" title=\"struct starchart::action::CreateOperation\">CreateOperation</a>","synthetic":true,"types":["starchart::action::impl::CreateOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.ReadOperation.html\" title=\"struct starchart::action::ReadOperation\">ReadOperation</a>","synthetic":true,"types":["starchart::action::impl::ReadOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.UpdateOperation.html\" title=\"struct starchart::action::UpdateOperation\">UpdateOperation</a>","synthetic":true,"types":["starchart::action::impl::UpdateOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.DeleteOperation.html\" title=\"struct starchart::action::DeleteOperation\">DeleteOperation</a>","synthetic":true,"types":["starchart::action::impl::DeleteOperation"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.TableTarget.html\" title=\"struct starchart::action::TableTarget\">TableTarget</a>","synthetic":true,"types":["starchart::action::impl::TableTarget"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/action/struct.EntryTarget.html\" title=\"struct starchart::action::EntryTarget\">EntryTarget</a>","synthetic":true,"types":["starchart::action::impl::EntryTarget"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/action/enum.ActionKind.html\" title=\"enum starchart::action::ActionKind\">ActionKind</a>","synthetic":true,"types":["starchart::action::kind::ActionKind"]},{"text":"impl&lt;R&gt; Freeze for <a class=\"enum\" href=\"starchart/action/enum.ActionResult.html\" title=\"enum starchart::action::ActionResult\">ActionResult</a>&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":["starchart::action::result::ActionResult"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/action/enum.TargetKind.html\" title=\"enum starchart::action::TargetKind\">TargetKind</a>","synthetic":true,"types":["starchart::action::target::TargetKind"]},{"text":"impl&lt;'a, S, C, T&gt; Freeze for <a class=\"struct\" href=\"starchart/struct.Action.html\" title=\"struct starchart::Action\">Action</a>&lt;'a, S, C, T&gt;","synthetic":true,"types":["starchart::action::Action"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart/struct.Error.html\" title=\"struct starchart::Error\">Error</a>","synthetic":true,"types":["starchart::error::Error"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart/error/enum.ErrorType.html\" title=\"enum starchart::error::ErrorType\">ErrorType</a>","synthetic":true,"types":["starchart::error::ErrorType"]},{"text":"impl&lt;B&gt; Freeze for <a class=\"struct\" href=\"starchart/struct.Starchart.html\" title=\"struct starchart::Starchart\">Starchart</a>&lt;B&gt;","synthetic":true,"types":["starchart::starchart::Starchart"]}];
implementors["starchart_backends"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"starchart_backends/fs/transcoders/enum.BinaryFormat.html\" title=\"enum starchart_backends::fs::transcoders::BinaryFormat\">BinaryFormat</a>","synthetic":true,"types":["starchart_backends::fs::binary::BinaryFormat"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/fs/transcoders/struct.BinaryTranscoder.html\" title=\"struct starchart_backends::fs::transcoders::BinaryTranscoder\">BinaryTranscoder</a>","synthetic":true,"types":["starchart_backends::fs::binary::BinaryTranscoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/fs/struct.FsError.html\" title=\"struct starchart_backends::fs::FsError\">FsError</a>","synthetic":true,"types":["starchart_backends::fs::error::FsError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart_backends/fs/enum.FsErrorType.html\" title=\"enum starchart_backends::fs::FsErrorType\">FsErrorType</a>","synthetic":true,"types":["starchart_backends::fs::error::FsErrorType"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/fs/transcoders/struct.JsonTranscoder.html\" title=\"struct starchart_backends::fs::transcoders::JsonTranscoder\">JsonTranscoder</a>","synthetic":true,"types":["starchart_backends::fs::json::JsonTranscoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/fs/transcoders/struct.TomlTranscoder.html\" title=\"struct starchart_backends::fs::transcoders::TomlTranscoder\">TomlTranscoder</a>","synthetic":true,"types":["starchart_backends::fs::toml::TomlTranscoder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/fs/transcoders/struct.YamlTranscoder.html\" title=\"struct starchart_backends::fs::transcoders::YamlTranscoder\">YamlTranscoder</a>","synthetic":true,"types":["starchart_backends::fs::yaml::YamlTranscoder"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart_backends/fs/transcoders/enum.TranscoderFormat.html\" title=\"enum starchart_backends::fs::transcoders::TranscoderFormat\">TranscoderFormat</a>","synthetic":true,"types":["starchart_backends::fs::transcoders::TranscoderFormat"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"starchart_backends/fs/struct.FsBackend.html\" title=\"struct starchart_backends::fs::FsBackend\">FsBackend</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["starchart_backends::fs::FsBackend"]},{"text":"impl Freeze for <a class=\"struct\" href=\"starchart_backends/memory/struct.MemoryError.html\" title=\"struct starchart_backends::memory::MemoryError\">MemoryError</a>","synthetic":true,"types":["starchart_backends::memory::MemoryError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"starchart_backends/memory/enum.MemoryErrorType.html\" title=\"enum starchart_backends::memory::MemoryErrorType\">MemoryErrorType</a>","synthetic":true,"types":["starchart_backends::memory::MemoryErrorType"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"starchart_backends/memory/struct.MemoryBackend.html\" title=\"struct starchart_backends::memory::MemoryBackend\">MemoryBackend</a>&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["starchart_backends::memory::MemoryBackend"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()